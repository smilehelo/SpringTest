<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
             http://www.springframework.org/schema/beans/spring-beans.xsd  
         http://www.springframework.org/schema/context   
         http://www.springframework.org/schema/context/spring-context-4.0.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx.xsd
         http://www.springframework.org/schema/mvc
         http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">
         
	<!-- 1.配置springMVC -->
	<!-- 开启springMVC注解模式 -->
	<!-- 简化配置
		1.自动注册DefaultAnnotationHandlerMappering，AnnotationMethodHandlerAdapter
		2.默认提供一些列功能：数据绑定，数字和日期的format @NumberFormat，@DataTimeFormat
		  xml,json默认读写支持
	-->
	<mvc:annotation-driven />
	
	<!-- 2.servlet-mappring映射路径：“/” -->
	<!-- 静态资源默认servlet配置 
		1.加入对静态资源的处理：jsp，gif，png
		2.允许使用“/”做整体映射
	-->
	<mvc:default-servlet-handler />
	
	<!-- 3.配置jsp显示ViewResolver -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- 4.扫描web相关的bean -->
	<context:component-scan base-package="me.springtest" />
	
	 <!-- spring mvc验证开始 ，若不使用这种配置，需要将错误信息硬编码到代码里，不易修改-->
    <!-- 默认的注解映射的支持 -->  
    <mvc:annotation-driven validator="validator" conversion-service="conversion-service" />
    
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass"  value="org.hibernate.validator.HibernateValidator"/>
        <!--不设置则默认为classpath下的 ValidationMessages.properties -->
        <property name="validationMessageSource" ref="validatemessageSource"/>
    </bean>
    <bean id="conversion-service" class="org.springframework.format.support.FormattingConversionServiceFactoryBean" />
    <bean id="validatemessageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">  
        <property name="basename" value="classpath:ValidationMessages"/>  
        <property name="fileEncodings" value="utf-8"/>  
        <property name="cacheSeconds" value="120"/>  
    </bean>
    <!-- spring mvc验证结束 -->

</beans>